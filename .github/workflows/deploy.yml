name: Deploy to AWS App Runner

on:
  push:
    branches:
      - main
  workflow_dispatch: # Permite ejecutar manualmente desde GitHub

env:
  AWS_REGION: us-east-2
  ECR_REPOSITORY: factura_al_sat
  ECR_REGISTRY: 397753626469.dkr.ecr.us-east-2.amazonaws.com
  APP_RUNNER_SERVICE_ARN: arn:aws:apprunner:us-east-2:397753626469:service/factura_api/b8be7f78afff42cfa421a8a7e8546765

jobs:
  deploy:
    name: Build and Deploy to App Runner
    runs-on: ubuntu-latest

    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 🔐 Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: 🔑 Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: 📦 Build, tag, and push image to Amazon ECR
        id: build-image
        env:
          IMAGE_TAG: ${{ github.sha }}
        run: |
          # Navigate to backend directory if needed
          cd ${{ github.workspace }}
          
          # Check if Dockerfile exists
          if [ ! -f "Dockerfile" ]; then
            echo "❌ Dockerfile not found in root directory"
            echo "📂 Listing directory contents:"
            ls -la
            exit 1
          fi
          
          # Build Docker image
          echo "🏗️ Building Docker image..."
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          docker tag $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG $ECR_REGISTRY/$ECR_REPOSITORY:latest

          # Push to ECR
          echo "⬆️ Pushing image to ECR..."
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:latest

          # Output image URI for next steps
          echo "image=$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG" >> $GITHUB_OUTPUT
          echo "✅ Image pushed successfully!"

      - name: 🚀 Deploy to App Runner
        id: deploy-apprunner
        run: |
          echo "🔄 Triggering App Runner deployment..."

          # Start a new deployment
          aws apprunner start-deployment \
            --service-arn $APP_RUNNER_SERVICE_ARN \
            --region $AWS_REGION

          echo "✅ Deployment triggered successfully!"
          echo "🔗 App Runner will automatically pull the latest image from ECR"

      - name: 📊 Get deployment status
        run: |
          echo "📋 Checking service status..."
          aws apprunner describe-service \
            --service-arn $APP_RUNNER_SERVICE_ARN \
            --region $AWS_REGION \
            --query 'Service.{Status:Status,ServiceUrl:ServiceUrl}' \
            --output table

      - name: 📝 Summary
        run: |
          echo "## 🎉 Deployment Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "- 🐳 **Image**: \`${{ steps.build-image.outputs.image }}\`" >> $GITHUB_STEP_SUMMARY
          echo "- 🏷️ **Tag**: \`${{ github.sha }}\`" >> $GITHUB_STEP_SUMMARY
          echo "- 🌍 **Region**: \`${{ env.AWS_REGION }}\`" >> $GITHUB_STEP_SUMMARY
          echo "- 🚀 **Service**: \`factura_api\`" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "✅ **App Runner** will automatically update to the new image." >> $GITHUB_STEP_SUMMARY
